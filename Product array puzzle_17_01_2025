Product array puzzle
Given an array, arr[] construct a product array, res[] where each element in res[i] is the product of all elements in arr[] except arr[i]. Return this resultant array, res[].
Note: Each element is res[] lies inside the 32-bit integer range.

Examples:
Input: arr[] = [10, 3, 5, 6, 2]
Output: [180, 600, 360, 300, 900]
Explanation: For i=0, res[i] = 3 * 5 * 6 * 2 is 180.
For i = 1, res[i] = 10 * 5 * 6 * 2 is 600.
For i = 2, res[i] = 10 * 3 * 6 * 2 is 360.
For i = 3, res[i] = 10 * 3 * 5 * 2 is 300.
For i = 4, res[i] = 10 * 3 * 5 * 6 is 900.
Input: arr[] = [12, 0]
Output: [0, 12]
Explanation: For i = 0, res[i] is 0.
For i = 1, res[i] is 12.
Constraints:
2 <= arr.size() <= 10^5
-100 <= arr[i] <= 100

My Approach:
public static int[] productExceptSelf(int arr[]) {
        // code here
        
        int [] res=new int[arr.length];
        
        // Count no of zeros and calculate the product of non zeros elements
        int count0=0;
        int product=1;
        for(int i=0;i<arr.length;i++){
            if(arr[i]==0){
                count0++;
                continue;
            }
            product*=arr[i];
        }
        for(int i=0;i<res.length;i++){
            if(count0>1){
                res[i]=0;
            }
            else if(count0==1){
                res[i]=arr[i]==0?product:0;
            }
            else{
                res[i]=product/arr[i];  
            }    
        }
        return res;       
    }
Time Complexity: O(n)
Space Complexity: O(n)


// Using two extra Array and without division operator

public static int[] productExceptSelf(int arr[]) {
        // code herr
        int n=arr.length;
        
        int [] leftarrayproduct=new int [n];
        int [] rightarrayproduct=new int [n];
        int [] res=new int [n];
        Arrays.fill(leftarrayproduct,1);
        Arrays.fill(rightarrayproduct,1);
        
        // Calculate the left product from previous indexe
        int left=1;
        for(int i=0;i<n;i++){
            leftarrayproduct[i]=left;
            left*=arr[i];
        }
        // Calculate the right product after indexes
        int right=1;
        for(int i=n-1;i>=0;i--){
            rightarrayproduct[i]=right;
            right*=arr[i];
        }
        // Entry in result Array
        
        for(int i=0;i<n;i++){
            res[i]=leftarrayproduct[i]*rightarrayproduct[i];
        }
        
        return res;
    }











